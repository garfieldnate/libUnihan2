cmake_minimum_required(VERSION 2.4)
if(COMMAND cmake_policy)
      cmake_policy(SET CMP0003 NEW)
endif(COMMAND cmake_policy)

#Project name
PROJECT(libUnihan)
SET(CMAKE_C_FLAGS "-Wall")
SET(PRJ_VER_MAJOR "0")
SET(PRJ_VER_MINOR "4")
SET(PRJ_VER_PATCH "2")
SET(PRJ_VER ${PRJ_VER_MAJOR}.${PRJ_VER_MINOR}.${PRJ_VER_PATCH})
SET(DB_VER "5.1.0")
SET(DB_PATCH_LEVEL "6")
SET(DB_PRJ_NAME  "UnihanDb")
SET(DB_NAME "Unihan.db")

IF(NOT DEFINED CMAKE_INSTALL_PREFIX)
    ADD_DEFINITIONS(-DCMAKE_INSTALL_PREFIX='"/usr"')
    SET(CMAKE_INSTALL_PREFIX /usr)
ENDIF(NOT DEFINED CMAKE_INSTALL_PREFIX)

IF(NOT DEFINED datadir)
    ADD_DEFINITIONS(-Ddatadir='"${CMAKE_INSTALL_PREFIX}/share"')
    SET(datadir ${CMAKE_INSTALL_PREFIX}/share)
ENDIF(NOT DEFINED datadir)

IF(NOT DEFINED docdir)
    ADD_DEFINITIONS(-Ddocdir='"${datadir}/doc"')
    SET(docdir ${datadir}/doc)
ENDIF(NOT DEFINED docdir)


SET(DB_DIR ${datadir}/${DB_PRJ_NAME})
ADD_DEFINITIONS(-DUNIHAN_DEFAULT_DB='"${DB_DIR}/${DB_NAME}"')


# Source code subdirectories
ADD_SUBDIRECTORY(src bin)
ADD_SUBDIRECTORY(test)
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR})
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR})

FIND_PACKAGE(PkgConfig)
PKG_CHECK_MODULES(GLIB2 glib-2.0)
PKG_CHECK_MODULES(SQLITE3 sqlite3)

ADD_CUSTOM_TARGET(${DB_NAME}
    COMMAND /bin/ln -sf ${DB_NAME}.${DB_VER}-${DB_PATCH_LEVEL} ${DB_NAME}
    DEPENDS ${DB_NAME}.${DB_VER}-${DB_PATCH_LEVEL})

SET(MAIN_DOCS AUTHORS README ChangeLog NEWS COPYING COPYING.LESSER )

INSTALL(FILES ${MAIN_DOCS} 
    DESTINATION "${docdir}/${PROJECT_NAME}-${PRJ_VER}")

#ADD_CUSTOM_COMMAND(OUTPUT ${DB_NAME}
#    COMMAND /bin/ln -sf ${DB_NAME}.${DB_VER} ${DB_NAME}
#    DEPENDS ${DB_NAME}.${DB_VER})
# COMMAND(ln -s  ${DB_NAME}.${DB_VER} ${DB_NAME})

SET(DB_DOCS README-db ChangeLog-db)

ADD_CUSTOM_TARGET(package_db_doc
    COMMAND /bin/tar czvf "${DB_PRJ_NAME}-doc-${DB_VER}.tar.gz" ${DB_DOCS}
)

ADD_CUSTOM_TARGET(package_db
    COMMAND mkdir -p "${DB_PRJ_NAME}-${DB_VER}-${DB_PATCH_LEVEL}" 
    COMMAND cp "${DB_NAME}.${DB_VER}-${DB_PATCH_LEVEL}" "${DB_PRJ_NAME}-${DB_VER}-${DB_PATCH_LEVEL}" 
    COMMAND cp ${DB_DOCS}  "${DB_PRJ_NAME}-${DB_VER}-${DB_PATCH_LEVEL}" 
    COMMAND /bin/tar czvf "${DB_PRJ_NAME}-${DB_VER}-${DB_PATCH_LEVEL}.tar.gz" "${DB_PRJ_NAME}-${DB_VER}-${DB_PATCH_LEVEL}"
    COMMAND rm -fr "${DB_PRJ_NAME}-${DB_VER}-${DB_PATCH_LEVEL}"
)

ADD_CUSTOM_TARGET(install_db
    COMMAND mkdir -p "${DB_DIR}" 
    COMMAND cp "${DB_NAME}.${DB_VER}-${DB_PATCH_LEVEL}" ${DB_DIR}
    COMMAND ln -sf "${DB_NAME}.${DB_VER}-${DB_PATCH_LEVEL}" ${DB_DIR}/${DB_NAME}
    COMMAND mkdir -p "${docdir}/${DB_PRJ_NAME}" 
    COMMAND cp README-db "${docdir}/${DB_PRJ_NAME}" 
    COMMAND cp ChangLog-db "${docdir}/${DB_PRJ_NAME}" 
)


### Package configuration
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "libUnihan")
SET(CPACK_PACKAGE_VENDOR "Red Hat, APAC, Inc.")
SET(CPACK_GENERATOR "TGZ")
SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/README")
SET(CPACK_RESOURCE_FILE_LICENSE
    ${CMAKE_CURRENT_SOURCE_DIR}/COPYING)
SET(CPACK_RESOURCE_FILE_LICENSE
    ${CMAKE_CURRENT_SOURCE_DIR}/COPYING.LESSER)
SET(CPACK_PACKAGE_VERSION_MAJOR ${PRJ_VER_MAJOR})
SET(CPACK_PACKAGE_VERSION_MINOR ${PRJ_VER_MINOR})
SET(CPACK_PACKAGE_VERSION_PATCH ${PRJ_VER_PATCH})
SET(COMMON_IGNORE_FILES "/CMakeFiles/" "/Testing/" "/.svn/" "_CPack_Packages/" 
    ".cmake$" "~" ".swp" ".log" ".gz" '.directory$' "CMakeCache.txt")

SET(PRJ_COMMON_IGNORE_FILES ${COMMON_IGNORE_FILES} "/doc/"  "/www/" ".vis"  '.db$' )

SET(CPACK_SOURCE_IGNORE_FILES ${PRJ_COMMON_IGNORE_FILES} "/bin/" ".db" "-db")
SET(CPACK_PACKAGE_IGNORE_FILES ${PRJ_COMMON_IGNORE_FILES} "/src/" )
SET(CPACK_SOURCE_GENERATOR "TGZ")

INCLUDE(CPack)

### Document generation
FIND_PACKAGE(Doxygen)
IF (EXISTS ${DOXYGEN})
  ADD_CUSTOM_TARGET(doxygen    
    COMMAND "${DOXYGEN}" "Doxyfile"
    WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}")
  INSTALL(DIRECTORY doc/html
    DESTINATION "${docdir}/${PROJECT_NAME}-${PRJ_VER}"
  )
ENDIF (EXISTS ${DOXYGEN})

### For Uninstall
CONFIGURE_FILE(
  "${CMAKE_CURRENT_SOURCE_DIR}/cmake_uninstall.cmake.in"
  "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake"
  IMMEDIATE @ONLY)

ADD_CUSTOM_TARGET(uninstall
  "${CMAKE_COMMAND}" -P "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake")

### For testing
ENABLE_TESTING()
ADD_TEST(check_phonetic ${PROJECT_BINARY_DIR}/test/check_phonetic ) 

